--------------------------------------------------------------------------------
--  Quick-Sort  ----------------------------------------------------------------
--------------------------------------------------------------------------------


-- type
qsort :: Ord a => [a] -> [a]

-- boundary case
qsort []  = []

-- main def
qsort (p:xs) = (qsort l) ++ [p] ++ (qsort g)
    where
        l = filter (<  p) xs
        g = filter (>= p) xs


--------------------------------------------------------------------------------
--  main  ----------------------------------------------------------------------
--------------------------------------------------------------------------------

string2int :: String -> Integer
string2int s = read s :: Integer

main = do
    s <- readFile "QuickSort_example.txt"
    let a = map string2int (lines s)
    print a
    print $ qsort a











